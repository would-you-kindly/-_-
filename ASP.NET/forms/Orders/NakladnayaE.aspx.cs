/*flexberryautogenerated="false"*/

namespace IIS.АСУ_Склад
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Web.Controls;
    using ICSSoft.STORMNET.Web.AjaxControls;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.Windows.Forms;

    public partial class НакладнаяE : BaseEditForm<Накладная>
    {
        /// <summary>
        /// Конструктор формы.
        /// </summary>
        public НакладнаяE()
            : base(Накладная.Views.НакладнаяE)
        {
        }

        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Orders/NakladnayaE.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
        }

        /// <summary>
        /// Здесь лучше всего писать бизнес-логику, оперируя только объектом данных.
        /// </summary>
        protected override void PreApplyToControls()
        {
            if (IsPostBack && (DataObject == null || DataObject.GetStatus(true) == ObjectStatus.Created))
            {
                var заказ = ctrlЗаказ.SelectedMasterPK;
                ctrlЗаказ.MasterViewName = Заказ.Views.ЗаказL.Name;

                var langdef = ExternalLangDef.LanguageDef;
                var lcs = LoadingCustomizationStruct.GetSimpleStruct(typeof(СтрокаЗаказа), СтрокаЗаказа.Views.СтрокаЗаказаE);
                lcs.LimitFunction = langdef.GetFunction(langdef.funcEQ,
                                                new VariableDef(langdef.GuidType, Information.ExtractPropertyPath<СтрокаЗаказа>(x => x.Заказ)), заказ);
                var строкиЗаказа = DataServiceProvider.DataService.LoadObjects(lcs);

                foreach (var s in строкиЗаказа)
                {
                    var строкаЗаказа = (СтрокаЗаказа)s;
                    DataObject.ЗаписьВНакладной.Add(new ЗаписьВНакладной { Количество = строкаЗаказа.Количество, Товар = строкаЗаказа.Товар });
                }
            }
        }

        /// <summary>
        /// Здесь лучше всего изменять свойства контролов на странице,
        /// которые не обрабатываются WebBinder.
        /// </summary>
        protected override void PostApplyToControls()
        {
            Page.Validate();
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }

        /// <summary>
        /// Валидация объекта для сохранения.
        /// </summary>
        /// <returns>true - продолжать сохранение, иначе - прекратить.</returns>
        protected override bool PreSaveObject()
        {
            return base.PreSaveObject();
        }

        /// <summary>
        /// Нетривиальная логика сохранения объекта.
        /// </summary>
        /// <returns>Объект данных, который сохранился.</returns>
        protected override DataObject SaveObject()
        {
            return base.SaveObject();
        }
    }
}